#!/bin/sh
#
# Submit a Gaussian 09 job to the grid
#
# $1      -- name of input file
# $2      -- wall time (hours)
# 
# Number of processors will be read from the Gaussian input file
# Memory per processor is 1.8 Gb per node
#
# Additional specification in the input line is possible only after supplying walltime in hours
#
# First check if the queue exists
#

#
# check for the input file
#

if [ $# -ne 5 ]
then
   echo "Usage: $0 filename[.xyz] code functional basisset queue"
   exit 1
fi


f=$1
code=$2
functional=$3
basisset=$4
queue=$5

# Start creating the input file
cat <<END >>$f.job
#!/bin/bash
#PBS -N $f
#PBS -l select=1:ncpus=1:mem=1gb
#PBS -l walltime=02:00:00
#PBS -r n
#PBS -q $queue

export OMP_NUM_THREADS=$NPROC
ulimit -s unlimited

cd \$PBS_O_WORKDIR

#~/EPHI/ephi -c $code -q $queue -f $f.xyz

if [ ! -f route ]
then
echo "Testing '/home/ajp/ephi/run.sh -q allq -f water.xyz -c gaussian' for $functional/$basisset"
cat <<EiND > tmpinp.dat
$functional/$basisset

0 1

EiND
else
echo "Testing '/home/ajp/ephi/run.sh -q allq -f water.xyz -c gaussian' for $functional/$basisset"
cat <<EiND > tmpinp.dat
no
$functional/$basisset

0 1

EiND
fi
cat "tmpinp.dat" | ~/EPHI/ephi -c $code -q $queue -f $f.xyz
fi
rm tmp.inp.dat


END

# Now submit it.
qsub $f.job
rm -f $f.job

exit 0

