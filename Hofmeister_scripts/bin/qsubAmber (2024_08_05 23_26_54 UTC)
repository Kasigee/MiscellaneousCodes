#!/bin/sh
#
# Submit an Amber job to the grid
#
# $1      -- (prefix)f of input file
# $2      -- wall time (hours)
# $3	  -- number of cores
# $4	  -- memory (use unit such as gb)
#

if [ $# -ne 4 ]
then
	echo "Usage: $0 jobf  wallclocktime(hh:mm:ss) ncpus mem(gb)"
   exit 1
fi

f=$1


# Start creating the input file
cat <<END >>$f.job
#!/bin/bash
#PBS -N $f
#PBS -l select=1:ncpus=$3:mem=$4
#PBS -l walltime=$2
#PBS -r n
#PBS -q allq

export OMP_NUM_THREADS=1
ulimit -s unlimited

source /home/kpg600/.bashrc
cd \$PBS_O_WORKDIR
conda init bash
conda activate AmberTools20

#Minimise:
sander -O -i "$f"_min.Exp.in -o "$f"_min.Exp.out -p "$f".Exp.prmtop -c "$f".Exp.inpcrd -r "$f"_min.Exp.rst -ref "$f".Exp.inpcrd
#Heat:
sander -O -i "$f"_heat.Exp.in -o "$f"_heat.Exp.out -p "$f".Exp.prmtop -c "$f"_min.Exp.rst -r "$f"_heat.Exp.rst -x "$f"_heat.Exp.netcdf -ref "$f"_min.Exp.rst
#Production MD run:
sander -O -i "$f"_prod.Exp.in -o "$f"_prod.Exp.out -p "$f".Exp.prmtop -c "$f"_heat.Exp.rst -r "$f"_prod.Exp.rst -x "$f"_prod.Exp.netcdf -ref "$f"_heat.Exp.rst

END

# Now submit it.
qsub $f.job
rm -f $f.job

exit 0

